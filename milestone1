using System;

namespace LibraryManagement
{
    public class Book
    {
        private static readonly string[] ValidLotValues = { ".NET", "Java", "IMS", "V&V", "BI", "RDBMS" };

        public string BookID { get; set; }
        public string BookName { get; set; }
        public string ISBNNo { get; set; }
        public decimal Price { get; set; }
        public string Publisher { get; set; }
        public int NumberOfPages { get; set; }
        public string Language { get; set; } = "English"; // Default value
        public string LoT { get; set; } = "Technical"; // Default value
        public string Summary { get; set; }

        public void AcceptDetails()
        {
            Console.Write("Enter Book ID (5 digits): ");
            string bookID = Console.ReadLine();
            ValidateBookID(bookID);
            BookID = bookID;

            Console.Write("Enter Book Name: ");
            string bookName = Console.ReadLine();
            ValidateBookName(bookName);
            BookName = bookName;

            Console.Write("Enter ISBN No: ");
            ISBNNo = Console.ReadLine();

            Console.Write("Enter Price: ");
            Price = decimal.Parse(Console.ReadLine());

            Console.Write("Enter Publisher: ");
            Publisher = Console.ReadLine();

            Console.Write("Enter Number of Pages: ");
            NumberOfPages = int.Parse(Console.ReadLine());

            Console.Write("Enter Language (Press Enter to use default 'English'): ");
            string languageInput = Console.ReadLine();
            if (!string.IsNullOrEmpty(languageInput))
                Language = languageInput;

            Console.Write("Enter LoT (Press Enter to use default 'Technical'): ");
            string lotInput = Console.ReadLine();
            if (!string.IsNullOrEmpty(lotInput))
                ValidateLot(lotInput);
            LoT = lotInput;

            Console.Write("Enter Summary: ");
            Summary = Console.ReadLine();
        }

        private void ValidateBookID(string bookID)
        {
            if (string.IsNullOrEmpty(bookID) || bookID.Length != 5 || !int.TryParse(bookID, out _))
                throw new ArgumentException("Book ID should be a 5-digit number.");
        }

        private void ValidateBookName(string bookName)
        {
            if (string.IsNullOrEmpty(bookName))
                throw new ArgumentException("Book Name cannot be blank.");
        }

        private void ValidateLot(string lot)
        {
            if (string.IsNullOrEmpty(lot) || Array.IndexOf(ValidLotValues, lot) == -1)
                throw new ArgumentException("LoT must be one of the following: .NET, Java, IMS, V&V, BI, RDBMS.");
        }
    }
}
